import{_ as s,c as a,o as n,d as l}from"./app.008430f5.js";const p="/lucky-blog/wechat/pay.png",o="/lucky-blog/wechat/payment.png",_=JSON.parse('{"title":"小程序支付","description":"","frontmatter":{},"headers":[{"level":2,"title":"支付流程","slug":"支付流程","link":"#支付流程","children":[]}],"relativePath":"basic/wechat/pay.md","lastUpdated":null}'),e={name:"basic/wechat/pay.md"},c=l('<h1 id="小程序支付" tabindex="-1">小程序支付 <a class="header-anchor" href="#小程序支付" aria-hidden="true">#</a></h1><p>微信小程序为电商类小程序，提供了非常完善、优秀、安全的支付功能</p><p>在小程序内可调用微信的<code>API</code>完成支付功能，方便、快捷 <img src="'+p+'" alt=""></p><ul><li>用户通过分享或扫描二维码进入商户小程序，用户选择购买</li><li>调起微信支付控件，用户开始输入密码</li><li>密码验证通过，跳转支付成功页面，商户后台得到支付成功的结果</li><li>返回商户小程序， 显示购买成功</li><li>微信支付公众号下发支付凭证</li></ul><h2 id="支付流程" tabindex="-1">支付流程 <a class="header-anchor" href="#支付流程" aria-hidden="true">#</a></h2><p><img src="'+o+`" alt=""></p><p>具体流程：</p><ul><li>打开小程序，选择完商品，点击直接下单</li><li><code>wx.login()</code>获取用户临时登录凭证<code>code</code>，发送到后台服务器换取<code>openId</code></li><li>在下单时， 小程序需要将购买商品的<code>id</code>，商品数量，以及用户的<code>openId</code>传送到服务器</li><li>服务器在接收到<code>商品id、商品数量、openId</code>后，生成服务器订单数据，同时经过一定的签名算法，向微信支付发送请求，获取预付单信息(<code>prepay_id</code>),同时将获取的数据再次进行相应规则的签名，向小程序端响应必要的信息</li><li>小程序端在获取对应的参数后，调用wx.requestPayment()发起微信支付，唤醒支付工作台，进行支付</li><li>接下来的一些列操作都是由用户来操作的包括了微信支付密码，指纹等验证，确认支付之后执行鉴权调起支付</li><li><code>鉴权调起支付</code>：在微信后台进行鉴权，微信后台直接返回给前端支付的结果，前端收到返回数据后对支付结果进行展示</li><li><code>推送支付结果</code>：微信后台在给前端返回支付的结果后，也会向后台也返回一个支付结果，后台通过这个支付结果来更新订单的状态</li></ul><p>其中<code>后端响应数据必要的信息</code>则是<code>wx.requestPayment</code>方法所需要的参数，大致如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">requestPayment</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//时间戳</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">timeStamp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 随机字符串</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">nonceStr</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 统一下单接口返回的 prepay_id 参数值</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">package</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 签名类型</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">signType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 签名</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">paySign</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 调用成功回调</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">success</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 失败回调</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">fail</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 接口调用结束回调</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">complete</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div>`,10),t=[c];function r(i,y,D,F,d,A){return n(),a("div",null,t)}const h=s(e,[["render",r]]);export{_ as __pageData,h as default};
