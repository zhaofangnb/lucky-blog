import{_ as e,c as t,o as i,d as s}from"./app.008430f5.js";const u=JSON.parse('{"title":"Http","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.同源策略（协议+ 主机+端口 ）","slug":"_1-同源策略-协议-主机-端口","link":"#_1-同源策略-协议-主机-端口","children":[]},{"level":2,"title":"2.xss攻击 和 csrf攻击","slug":"_2-xss攻击-和-csrf攻击","link":"#_2-xss攻击-和-csrf攻击","children":[]}],"relativePath":"interview/http/index.md","lastUpdated":null}'),a={name:"interview/http/index.md"},l=s('<h1 id="http" tabindex="-1">Http <a class="header-anchor" href="#http" aria-hidden="true">#</a></h1><h2 id="_1-同源策略-协议-主机-端口" tabindex="-1">1.同源策略（协议+ 主机+端口 ） <a class="header-anchor" href="#_1-同源策略-协议-主机-端口" aria-hidden="true">#</a></h2><ul><li>CORS 跨域资源共享 服务端设置响应头</li><li>JSONP 最早出现，只支持get 如：<code>script、img、link、iframe</code></li><li>代理服务器</li><li>postMessage</li></ul><h2 id="_2-xss攻击-和-csrf攻击" tabindex="-1">2.xss攻击 和 csrf攻击 <a class="header-anchor" href="#_2-xss攻击-和-csrf攻击" aria-hidden="true">#</a></h2><ul><li>xss：诱骗用户点击恶意链接盗取用户 cookie 进行攻击、通常出现在<code>搜索框、留言板、评论区</code>等地方</li><li>csrf：跨站请求伪造、无法获取用户的 cookie 而是直接冒充用户、需要用户登录后进行操作, 可以设置token验证</li><li>在<code>Vue</code>中，可以通过使用<code>插值表达式、指令和计算属性</code>来防止 XSS 攻击。</li><li>Content Security Policy（内容安全策略，CSP）限制网页内容如何被加载资源的策略</li></ul>',5),r=[l];function c(d,n,o,_,h,p){return i(),t("div",null,r)}const x=e(a,[["render",c]]);export{u as __pageData,x as default};
