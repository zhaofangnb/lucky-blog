import{_ as s,c as n,o as a,d as l}from"./app.008430f5.js";const i=JSON.parse('{"title":"内置工具类型","description":"","frontmatter":{},"headers":[{"level":2,"title":"Exclude<T, U> 从T 可分配给的类型中排除U","slug":"exclude-t-u-从t-可分配给的类型中排除u","link":"#exclude-t-u-从t-可分配给的类型中排除u","children":[]},{"level":2,"title":"Extract<T, U> 从T可分配给的类型中提取U","slug":"extract-t-u-从t可分配给的类型中提取u","link":"#extract-t-u-从t可分配给的类型中提取u","children":[]},{"level":2,"title":"NonNullable 从T中排除null和undefined","slug":"nonnullable-从t中排除null和undefined","link":"#nonnullable-从t中排除null和undefined","children":[]},{"level":2,"title":"ReturnType 表示在 extends 条件语句中待推断的类型变量","slug":"returntype-表示在-extends-条件语句中待推断的类型变量","link":"#returntype-表示在-extends-条件语句中待推断的类型变量","children":[]},{"level":2,"title":"Parameters 获取函数类型的参数类型","slug":"parameters-获取函数类型的参数类型","link":"#parameters-获取函数类型的参数类型","children":[]},{"level":2,"title":"Partial 可以将传入的属性由必选变为可选","slug":"partial-可以将传入的属性由必选变为可选","link":"#partial-可以将传入的属性由必选变为可选","children":[]},{"level":2,"title":"Required 可以将传入的属性中的可选项变为必选项","slug":"required-可以将传入的属性中的可选项变为必选项","link":"#required-可以将传入的属性中的可选项变为必选项","children":[]},{"level":2,"title":"Readonly 通过为传入的属性每一项都加上readonly 修饰符来实现","slug":"readonly-通过为传入的属性每一项都加上readonly-修饰符来实现","link":"#readonly-通过为传入的属性每一项都加上readonly-修饰符来实现","children":[]},{"level":2,"title":"Pick<T, K> 能够帮助我们从传入的属性中摘取某些返回","slug":"pick-t-k-能够帮助我们从传入的属性中摘取某些返回","link":"#pick-t-k-能够帮助我们从传入的属性中摘取某些返回","children":[]},{"level":2,"title":"Record<K, T>构造一个类型，该类型具有一组属性K，每个属性的类型为T","slug":"record-k-t-构造一个类型-该类型具有一组属性k-每个属性的类型为t","link":"#record-k-t-构造一个类型-该类型具有一组属性k-每个属性的类型为t","children":[]},{"level":2,"title":"Omit<K, T>基于已经声明的类型进行属性剔除获得新类型","slug":"omit-k-t-基于已经声明的类型进行属性剔除获得新类型","link":"#omit-k-t-基于已经声明的类型进行属性剔除获得新类型","children":[]},{"level":2,"title":"infer表示在extends条件语句中待推断的类型变量","slug":"infer表示在extends条件语句中待推断的类型变量","link":"#infer表示在extends条件语句中待推断的类型变量","children":[]}],"relativePath":"advance/typescript/util.md","lastUpdated":null}'),p={name:"advance/typescript/util.md"},o=l("",46),e=[o];function t(c,r,y,C,F,D){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
