import{_ as s,c as a,o as n,d as e}from"./app.008430f5.js";const h=JSON.parse('{"title":"TypeScript","description":"","frontmatter":{},"headers":[{"level":2,"title":"什么是TypeScript","slug":"什么是typescript","link":"#什么是typescript","children":[]},{"level":2,"title":"使用TypeScript的优势(特性)","slug":"使用typescript的优势-特性","link":"#使用typescript的优势-特性","children":[{"level":3,"title":"静态类型检查","slug":"静态类型检查","link":"#静态类型检查","children":[]},{"level":3,"title":"良好的代码提示","slug":"良好的代码提示","link":"#良好的代码提示","children":[]}]},{"level":2,"title":"TypeScript环境搭建","slug":"typescript环境搭建","link":"#typescript环境搭建","children":[{"level":3,"title":"全局安装","slug":"全局安装","link":"#全局安装","children":[]},{"level":3,"title":"局部安装","slug":"局部安装","link":"#局部安装","children":[]},{"level":3,"title":"使用ts-node","slug":"使用ts-node","link":"#使用ts-node","children":[]},{"level":3,"title":"使用babel","slug":"使用babel","link":"#使用babel","children":[]}]}],"relativePath":"advance/typescript/index.md","lastUpdated":null}'),l={name:"advance/typescript/index.md"},p=e(`<h1 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-hidden="true">#</a></h1><h2 id="什么是typescript" tabindex="-1">什么是TypeScript <a class="header-anchor" href="#什么是typescript" aria-hidden="true">#</a></h2><p>TypeScript是一门由微软推出的开源的、跨平台的编程语言。它是JavaScript的<code>超集</code>，扩展了 JavaScript 的语法，<code>最终会被编译为JavaScript代码</code>。<br></p><h2 id="使用typescript的优势-特性" tabindex="-1">使用TypeScript的优势(特性) <a class="header-anchor" href="#使用typescript的优势-特性" aria-hidden="true">#</a></h2><h3 id="静态类型检查" tabindex="-1">静态类型检查 <a class="header-anchor" href="#静态类型检查" aria-hidden="true">#</a></h3><p>在<code>编译阶段</code>就可以发现大部分错误，避免了很多线上bug，省时省力。</p><h3 id="良好的代码提示" tabindex="-1">良好的代码提示 <a class="header-anchor" href="#良好的代码提示" aria-hidden="true">#</a></h3><p>增加了编辑器和<code>IDE</code>的功能， 包括<code>代码补全</code>,<code>接口提示</code>,<code>跳转到定义</code>等，大大提升了开发效率.</p><h2 id="typescript环境搭建" tabindex="-1">TypeScript环境搭建 <a class="header-anchor" href="#typescript环境搭建" aria-hidden="true">#</a></h2><h3 id="全局安装" tabindex="-1">全局安装 <a class="header-anchor" href="#全局安装" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm install </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">g typescript</span></span>
<span class="line"></span></code></pre></div><p>全局安装完就可以使用<code>tsc</code>命令将<code>ts</code>文件编译为<code>js</code>文件了</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">tsc index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts</span></span>
<span class="line"></span></code></pre></div><p>上面会把<code>index.ts</code>文件编译成<code>index.js</code>,并放到当前目录下</p><h3 id="局部安装" tabindex="-1">局部安装 <a class="header-anchor" href="#局部安装" aria-hidden="true">#</a></h3><p>首先创建<code>package.json</code>文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm init </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">y</span></span>
<span class="line"></span></code></pre></div><p>然后在当前目录下安装<code>typescript</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm install typescript</span></span>
<span class="line"></span></code></pre></div><p>然后我们生成<code>typescript</code>的配置文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">bin</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">tsc </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">init</span></span>
<span class="line"></span></code></pre></div><p>使用上面的命令后会在当前目录下生成<code>tsconfig.json</code>文件。</p><p>我们先在里面配置<code>rootDir</code>和<code>outDir</code>。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">rootDir</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 需要编译的ts文件目录</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">outDir</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./src</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 编译后js存放的目录</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>然后我们在<code>package.json</code>文件配置脚本。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tsc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build:w</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tsc -w</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>build是<code>全部编译</code>，build:w是<code>实时编译</code>，也就是我们ts文件有改动就会自动编译，在学习阶段推荐使用这个命令。<br></p><p>这样我们在命令行执行npm run build:w就能实时编译我们src目录下的ts文件啦。</p><h3 id="使用ts-node" tabindex="-1">使用ts-node <a class="header-anchor" href="#使用ts-node" aria-hidden="true">#</a></h3><p>如果觉得编译麻烦想直接运行ts文件的话可以使用ts-node。</p><p>全局安装</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm i </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">g ts</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">node</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">node index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts</span></span>
<span class="line"></span></code></pre></div><p>局部安装</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm i </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">g ts</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">node</span></span>
<span class="line"></span></code></pre></div><p>直接运行index.ts文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">node index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts</span></span>
<span class="line"></span></code></pre></div><p>局部安装</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">npm i ts</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">node</span></span>
<span class="line"></span></code></pre></div><p>在当前目录下运行index.ts文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">bin</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">node ts</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">node index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts</span></span>
<span class="line"></span></code></pre></div><h3 id="使用babel" tabindex="-1">使用babel <a class="header-anchor" href="#使用babel" aria-hidden="true">#</a></h3>`,42),o=[p];function t(c,i,r,d,y,D){return n(),a("div",null,o)}const C=s(l,[["render",t]]);export{h as __pageData,C as default};
