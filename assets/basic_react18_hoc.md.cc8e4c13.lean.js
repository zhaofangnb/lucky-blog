import{_ as s,c as n,o as a,d as l}from"./app.008430f5.js";const i=JSON.parse('{"title":"HOC高阶组件","description":"","frontmatter":{},"headers":[{"level":2,"title":"高阶组件产生的初衷","slug":"高阶组件产生的初衷","link":"#高阶组件产生的初衷","children":[]},{"level":2,"title":"几种包装组件的方式","slug":"几种包装组件的方式","link":"#几种包装组件的方式","children":[{"level":3,"title":"在有状态组件class中听过原型链继承来实现mixin","slug":"在有状态组件class中听过原型链继承来实现mixin","link":"#在有状态组件class中听过原型链继承来实现mixin","children":[]},{"level":3,"title":"extends继承模式","slug":"extends继承模式","link":"#extends继承模式","children":[]},{"level":3,"title":"HOC模式","slug":"hoc模式","link":"#hoc模式","children":[]},{"level":3,"title":"自定义hooks模式","slug":"自定义hooks模式","link":"#自定义hooks模式","children":[]}]},{"level":2,"title":"高阶组件的使用的编写结构","slug":"高阶组件的使用的编写结构","link":"#高阶组件的使用的编写结构","children":[{"level":3,"title":"使用：装饰器模式和函数包裹模式","slug":"使用-装饰器模式和函数包裹模式","link":"#使用-装饰器模式和函数包裹模式","children":[]},{"level":3,"title":"模型: 嵌套HOC","slug":"模型-嵌套hoc","link":"#模型-嵌套hoc","children":[]}]},{"level":2,"title":"两种不同的高阶组件","slug":"两种不同的高阶组件","link":"#两种不同的高阶组件","children":[{"level":3,"title":"正向属性代理","slug":"正向属性代理","link":"#正向属性代理","children":[]},{"level":3,"title":"反向继承","slug":"反向继承","link":"#反向继承","children":[]}]},{"level":2,"title":"如何编写高阶组件","slug":"如何编写高阶组件","link":"#如何编写高阶组件","children":[{"level":3,"title":"1.强化props","slug":"_1-强化props","link":"#_1-强化props","children":[]},{"level":3,"title":"2.控制渲染","slug":"_2-控制渲染","link":"#_2-控制渲染","children":[]}]}],"relativePath":"basic/react18/hoc.md","lastUpdated":null}'),p={name:"basic/react18/hoc.md"},o=l("",73),e=[o];function t(c,r,F,y,D,C){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
